# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    AppBundle\:
        resource: '../../src/AppBundle/*'
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Util\:
        resource: '%kernel.root_dir%/../src/AppBundle/Util/*'
        public: true

    AppBundle\Twig\Extension\:
        resource: '%kernel.root_dir%/../src/AppBundle/Twig/Extension'
        tags: ['twig.extension']
        public: true

    my_user_provider:
        class: 'AppBundle\Security\Core\User\FOSUBUserProvider'
        arguments: ["@fos_user.user_manager",{facebook: facebookId}]

    Twig\Extensions\TextExtension: ~

    AppBundle\Asset\VersionStrategy\JsonManifestVersionStrategy:
        autowire: false
        public: true
        arguments:
            - '%cdn.hostname%/static/manifest.json'

    app.form.profile:
        class: AppBundle\Form\ProfileFormType
        tags:
            - { name: form.type, alias: app_user_profile }

    lib.mobile_detect:
        class: \Mobile_Detect
        public: true

    AppBundle\WebService\MmttWebService:
        class: AppBundle\WebService\MmttWebService
        public: true

    AppBundle\Util\DotenvLoader:
        autowire: false
        public: true
        arguments: ['%kernel.project_dir%/.env']

    exchange_rate:
        class: AppBundle\Util\BnrExchangeRate
        public: true

    AppBundle\EventSubscriber\MinifyHtmlSubscriber:
        public: true
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    AppBundle\EventSubscriber\MaintenanceModeSubscriber:
        public: true
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }